#!/usr/bin/env python3
# with open('pi_digits.txt') as file_object:
#     contents = file_object.read()
# print(contents.rstrip())

# filename = 'pi_digits.txt'
# with open(filename) as file_object:
#     lines = file_object.readlines()
# for line in lines:
#     print(line.rstrip())

# filename = 'pi_digits.txt'
# with open(filename) as file_object:
#     lines = file_object.readlines()
# pi_string = ''
# for line in lines:
#     pi_string += line.strip()
# print(pi_string)
# print(len(pi_string))

# 打印小数点后50位并统计长度
# filename = 'pi_million_digits.txt'
# with open(filename) as file_object:
#     lines = file_object.readlines()
# pi_string = ''
# for line in lines:
#     pi_string += line.strip()
# print(f"{pi_string[:52]}...")
# print(len(pi_string))

# 看看你的生日在不在文件里
# filename = 'pi_million_digits.txt'
# with open(filename) as file_object:
#     lines = file_object.readlines()
# pi_string = ''
# for line in lines:
#     pi_string += line.strip()
# brithday = input("Enter you brithday:")
# if brithday in pi_string:
#     print("You brithday appears in the pi")
# else:
#     print("Does not")

# # 写入一个文件
# filename = 'program.txt'
# with open(filename, 'w') as file_object:
#     file_object.write("I love program")

# 附加到文件
# filename = 'program.txt'
# with open(filename, 'a') as file_object:
#     file_object.write("\nI also love game.\n")

# try:
#     print(5/0)
# except ZeroDivisionError:
#     print("You can't division by zero")

# 简单的除法运算器
# print("Give me two numbers, and I'll divide them.")
# print("Enter 'q' to quit.")
# while True:
#     first_number = input("\nFirst number:")
#     if first_number == 'q':
#         break
#     second_number = input("\nSecond number:")
#     if second_number == 'q':
#         break
#     try:
#         answer = int(first_number) / int(second_number)
#     except ZeroDivisionError:
#         print("You can't division by 0")
#     else:
#         print(answer)

# # 如果以前存储了文件就加载，否则提示用户输入并存储它。
# import json
#
# filename = 'numbers.json'
# try:
#     with open(filename) as f:
#         username = json.load(f)
# except FileNotFoundError:
#     username = input("What is you name?")
#     with open(filename, 'w') as f:
#         json.dump(username, f)
#         print(f"We'll remember you when you come back, {username}!")
# else:
#     print(f"Welcome back, {username}!")

# 测试模块 self.assertEqual是断言
# import unittest
# from name_function import get_formatted_name
#
#
# class NameTestCase(unittest.TestCase):
#     def test_first_last_name(self):
#         formatted_name = get_formatted_name('janis', 'joplin')
#         self.assertEqual(formatted_name, 'Janis Joplin')
#
#     def test_first_last_middle_name(self):
#         formatted_name = get_formatted_name('zhao', 'jiang', 'da')
#         self.assertEqual(formatted_name, 'Zhao Da Jiang')
#
#
# if __name__ == '__main__':
#     unittest.main()

