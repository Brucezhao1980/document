1.安装依赖
	   yum install -y  gcc gcc-c++ cmake ncurses ncurses-devel bison libaio-devel  openssl openssl-devel

2.下载源码包

       wget https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-boost-5.7.25.tar.gz     (此版本带有boost)

3.创建mysql用户

       groupadd mysql
       useradd -r -g mysql -s /bin/false mysql	   
	   
4.创建安装目录和数据目录

      mkdir -p /usr/local/mysql
	  mkdir -p /data/mysql/data
      chown -R mysql:mysql /data/mysql

将下载好的mysql 解压到/usr/local/mysql 目录下

tar -zxvf mysql-boost-5.7.25.tar.gz -C /usr/local/mysql/

切换到/usr/local/mysql 目录下，编译安装

cd /usr/local/mysql/mysql-5.7.25/


cmake -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_BOOST=boost

make && make install

把安装目录用户和组更改为mysql  

chown -R mysql:mysql mysql

把数据库数据目录用户和组更改为mysql （ 数据库数据目录：/data/mysql/data）注：/data/mysql/data目录下一定要为空才行

初始化mysql

./mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql/data

拷贝可执行配置文件

cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld

修改my.cnf配置文件 然后再启动。


service mysqld start

修改环境变量
在/etc/profile 中新增一行
PATH=/usr/local/mysql/bin:$PATH

source /etc/profile

mysql -hlocalhost -uroot -p

空密码登录

设置开机自启动

systemctl enable mysqld

##############################################################################################################################

Master的配置

修改/etc/my.cnf

[mysqld]
port        = 3306
socket      = /tmp/mysql.sock
user = mysql
server_id=1
log-bin=mysql-bin
binlog-ignore-db=information_schema
binlog-ignore-db=mysql
binlog-do-db=vmcode
binlog-do-db=vmcode_prepose

basedir = /usr/local/mysql
datadir = /data/mysql/data
pid-file = /data/mysql/mysql.pid

log_error = /data/mysql/mysql-error.log
slow_query_log = 1
long_query_time = 1
slow_query_log_file = /data/mysql/mysql-slow.log


skip-external-locking
key_buffer_size = 32M
max_allowed_packet = 1024M
table_open_cache = 128
sort_buffer_size = 768K
net_buffer_length = 8K
read_buffer_size = 768K
read_rnd_buffer_size = 512K
myisam_sort_buffer_size = 8M
thread_cache_size = 16
query_cache_size = 16M
tmp_table_size = 32M
performance_schema_max_table_instances = 1000

explicit_defaults_for_timestamp = true
#skip-networking
max_connections = 5000
max_connect_errors = 1000
open_files_limit = 65535

log_bin=mysql-bin
binlog_format=mixed
expire_logs_days = 10
early-plugin-load = ""

default_storage_engine = InnoDB
innodb_file_per_table = 1
innodb_buffer_pool_size = 128M
innodb_log_file_size = 32M
innodb_log_buffer_size = 8M
innodb_flush_log_at_trx_commit = 1
innodb_lock_wait_timeout = 50

[mysqldump]
quick
max_allowed_packet = 16M

[mysql]
no-auto-rehash

[myisamchk]
key_buffer_size = 32M
sort_buffer_size = 768K
read_buffer = 2M
write_buffer = 2M

############################################################################################################

这里的server-id用于标识唯一的数据库，在从库必须设置为不同的值。

binlog-ignore-db：表示同步的时候忽略的数据库

binlog-do-db：指定需要同步的数据库

############################################################################################################

从库配置

[mysqld]
port        = 3306
socket      = /tmp/mysql.sock
user = mysql
log-bin=mysql-bin
server_id=2
binlog-ignore-db=information_schema
binlog-ignore-db=mysql
replicate-do-db=vmcode
replicate-do-db=vmcode_prepose
log-slave-updates
slave-skip-errors=all
slave-net-timeout=60 


basedir = /usr/local/mysql
datadir = /data/mysql/data
pid-file = /data/mysql/mysql.pid

log_error = /data/mysql/mysql-error.log
slow_query_log = 1
long_query_time = 1
slow_query_log_file = /data/mysql/mysql-slow.log


skip-external-locking
key_buffer_size = 32M
max_allowed_packet = 1024M
table_open_cache = 128
sort_buffer_size = 768K
net_buffer_length = 8K
read_buffer_size = 768K
read_rnd_buffer_size = 512K
myisam_sort_buffer_size = 8M
thread_cache_size = 16
query_cache_size = 16M
tmp_table_size = 32M
performance_schema_max_table_instances = 1000

explicit_defaults_for_timestamp = true
#skip-networking
max_connections = 5000
max_connect_errors = 1000
open_files_limit = 65535

log_bin=mysql-bin
binlog_format=mixed
expire_logs_days = 10
early-plugin-load = ""

default_storage_engine = InnoDB
innodb_file_per_table = 1
innodb_buffer_pool_size = 128M
innodb_log_file_size = 32M
innodb_log_buffer_size = 8M
innodb_flush_log_at_trx_commit = 1
innodb_lock_wait_timeout = 50

[mysqldump]
quick
max_allowed_packet = 16M

[mysql]
no-auto-rehash

[myisamchk]
key_buffer_size = 32M
sort_buffer_size = 768K
read_buffer = 2M
write_buffer = 2M

########################################################################################################



要同步的2个库  

vmcode ：码管
vmcode_prepose ：前置	  

创建库
	  
create database vmcode;

create database vmcode_prepose;

mysql root 密码  fdr#fwmV=0#!


主库创建用户

grant replication slave on *.* to 'repl'@'173.16.67.104' identified by 'Redhat123...';  ###创建一个主从复制的用户repl  密码 Redhat123...

flush privileges;

主库登录后

show master status;

记录mysql-bin.000018 跟 master_log_pos=154

从库上登录mysql

stop slave;

change master to master_host='173.16.67.169',master_user='repl',master_password='Redhat123...',master_log_file='mysql-bin.000018',master_log_pos=154;

start slave;

show slave status \G  查看主从状态

Slave_IO_Running: Yes
Slave_SQL_Running: Yes

两个yes代表同步没问题

##########################################################################################################

性能测试 ：

2000客户端 10W数据  
mysqlslap --concurrency=2000 --iterations=1 --auto-generate-sql --auto-generate-sql-add-autoincrement --auto-generate-sql-load-type=mixed --engine=myisam --number-of-queries=100000 -uroot -p
	
	
	Average number of seconds to run all queries: 6.809 seconds
	Minimum number of seconds to run all queries: 6.809 seconds
	Maximum number of seconds to run all queries: 6.809 seconds
	Number of clients running queries: 2000
	Average number of queries per client: 50
	
	
2000客户端 100W数据 	
mysqlslap --concurrency=2000 --iterations=1 --auto-generate-sql --auto-generate-sql-add-autoincrement --auto-generate-sql-load-type=mixed --engine=myisam --number-of-queries=1000000 -uroot -p	

	Average number of seconds to run all queries: 67.634 seconds
	Minimum number of seconds to run all queries: 67.634 seconds
	Maximum number of seconds to run all queries: 67.634 seconds
	Number of clients running queries: 2000
	Average number of queries per client: 500
	

QAQ
1.问题一：
如果从库的Slave_IO_Running为NO。
The slave I/O thread stops because master and slave have equal MySQL server ids; these ids must be different for replication to work (or the --replicate-same-server-id option must be used on slave but this does not always make sense; please check the manual before using it).
 
解决方法：
show variables like 'server_id';
set global server_id=2;
slave start;
！！！修改完后必须重启进程


2.问题二：
查看mysql主从配置的状态及修正 slave不启动问题
解决方法：
查看master的状态：
show master status;  //Position不应该为0
show processlist; 
//state状态应该为Has sent all binlog to slave; waiting for binlog to be updated

查看slave状态：
show slave status;
//Slave_IO_Running 与 Slave_SQL_Running 状态都要为Yes
show processlist;
//应该有两行state值为：
Has read all relay log; waiting for the slave I/O thread to update it
Waiting for master to send event


3.问题三：
如果从库的slave_sql_running为NO。
解决方法：
slave stop;
set GLOBAL SQL_SLAVE_SKIP_COUNTER=1;
slave start;
！！！修改完后必须重启进程




4.问题四：
主从同步后，从修改后主从断开连接
主库锁定表：
flush tables with read lock;
show master status;

