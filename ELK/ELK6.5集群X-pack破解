ELK6.5集群破解

1.  安装集群
配置JDK1.8
添加hosts
配置ssh-key登录（可选）
执行Centos7的优化脚本  
  #!/bin/bash
cat << EOF
+---------------------------------------+
|   your system is CentOS 7 x86_64      |
|      start optimizing.......          |
+---------------------------------------
EOF

#添加公网DNS地址
cat >> /etc/resolv.conf << EOF
nameserver 114.114.114.114
EOF
#Yum源更换为国内阿里源
yum install wget telnet -y
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo

#yum重新建立缓存
yum clean all
yum makecache


#安装gcc基础库以及sysstat工具
yum -y install gcc gcc-c++ vim-enhanced unzip sysstat vim lrzsz net-tools
#配置NTP
yum install chrony -y
systemctl enable chronyd.service
systemctl start chronyd.service

#配置文件ulimit数值
ulimit -SHn 65534
echo "ulimit -SHN 65534" >> /etc/rc.local
cat >> /etc/security/limits.conf << EOF
*           soft     nofile     65534
*           hard     nofile     65534
es      soft    memlock         unlimited
es      hard    memlock         unlimited
es      hard    nofile      65536
es      soft    nofile      65536
es      hard    nproc       65536
es      soft    nproc       65536
EOF

#内核参数优化
cat >> /etc/sysctl.conf << EOF
vm.overcommit_memory = 1
net.ipv4.ip_local_port_range = 1024 65536
net.ipv4.tcp_fin_timeout = 1
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.tcp_mem = 94500000 915000000 927000000
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_abort_on_overflow = 0
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 262144
net.core.somaxconn = 262144
net.ipv4.tcp_max_orphans = 3276800
net.ipv4.tcp_max_syn_backlog = 262144
net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.ipv4.netfilter.ip_conntrack_max = 2097152
net.nf_conntrack_max = 655360
net.netfilter.nf_conntrack_tcp_timeout_established = 1200
vm.max_map_count=262144                                         #6.5以上版本必须
net.ipv6.conf.all.disable_ipv6 = 1                              #禁用ipV6
net.ipv6.conf.default.disable_ipv6 = 1                          #禁用ipV6

EOF
/sbin/sysctl -p
#禁用control-alt-delete组合键以防止误操作
sed -i 's@ca::ctrlaltdel:/sbin/shutdown -t3 -r now@#ca::ctrlaltdel:/sbin/shutdown -t3 -r now@' /etc/inittab
#关闭selinux
sed -i 's@SELINUX=enforcing@SELINUX=disabled@' /etc/selinux/config
#关闭防火墙
systemctl disable firewalld.service 
systemctl stop firewalld.service
#ssh服务配置优化，请保持机器中至少一个sudo权限用户，下面的配置会禁止root远程登录
#sed -i 's@#PermitRootLogin yes@PermitRootLogin no@' /etc/ssh/sshd_config
#禁止空密码登录
sed -i 's@#PermitEmptyPasswords no@PermitEmptyPasswords no@' /etc/ssh/sshd_config
#禁止SSH反向解析
sed  -i 's/^#UseDNS no/UseDNS no/g; s/^#UseDNS yes/UseDNS no/g' /etc/ssh/sshd_config
systemctl restart sshd
#禁用IPV6地址
#echo "install ipv6 /bin/true" > /etc/modprobe.d/disable-ipv6.conf
#每当系统需要加载IPV6模块时，强制执行/bin/true来代替实际加载的模块
#echo "IPV6INIT=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
#禁用基于IPV6网络，使之不会触发启动
#chkconfig ip6tables off
#vim 基础语法优化
cat >> /root/.vimrc << EOF
set ruler
set nohlsearch
set shiftwidth=2
set tabstop=4
set expandtab
set cindent
set autoindent
set mouse=v
syntax on 
EOF

cat << EOF
+-------------------------------------------------+
|               optimizer is done                 |
|   it's recommond to restart this server !       |
+-------------------------------------------------+
EOF
########################################################################
新建用户和组 es  

wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz.sha512
shasum -a 512 -c elasticsearch-6.5.4.tar.gz.sha512 
tar -xzf elasticsearch-6.5.4.tar.gz
cd elasticsearch-6.5.4/ 

cd /usr/local/src/elasticsearch-6.5.4/config

vim config/jvm.options

-Xms8g
-Xmx8g

修改配置文件 config/elasticsearch.yml  （node1的配置） 其他node节点更改节点名就可以，

cluster.name: elk-cluster
node.name: elk-1
path.data: /opt/elasticsearch-6.5.4/data
path.logs: /opt/elasticsearch-6.5.4/logs
bootstrap.memory_lock: false
network.host: 0.0.0.0
http.port: 9200
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.ssl.key: elasticsearch.key
xpack.ssl.certificate: elasticsearch.crt
xpack.ssl.certificate_authorities: ca.crt
discovery.zen.ping.unicast.hosts: ["elk-1", "elk-2", "elk-3"]
discovery.zen.minimum_master_nodes: 2
gateway.recover_after_nodes: 3

########################################################################################################

chown -R es:es  /opt/elasticsearch-6.5.4

启动ElasticSearch

nohup ./bin/elasticsearch &

查看集群状态  
curl -X GET "127.0.0.1:9200/"

安装插件  
./bin/elasticsearch-plugin install analysis-icu
./bin/elasticsearch-plugin install analysis-smartcn

查看已经安装的插件  

./bin/elasticsearch list

kibana 安装配置

下载
wget https://artifacts.elastic.co/downloads/kibana/kibana-6.5.4-linux-x86_64.tar.gz

解压之后修改配置文件

server.host: "10.100.1.201"
elasticsearch.url: "http://10.100.1.201:9200"

elasticsearch.username: elastic
elasticsearch.password: XXXXXXXXX

后面2行配置要在生成密码之后配置

启动kibana 

nohup ./bin/kibana &

Logstash 安装配置

wget https://artifacts.elastic.co/downloads/logstash/logstash-6.5.4.tar.gz

新建配置文件  logstash_es.yml

input {
        beats {
                port => "5044"
              }
}
filter {
        grok {
                match => { "message" => "MAINNGINXLOG %{COMBINEDAPACHELOG} %{QS:x_forwarded_for}" }
             }
        date {
                match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
                target => ["datetime"]
             }
        geoip {
                source => "clientip"
              }
}


output {
        elasticsearch {
                        hosts => ["10.100.1.201:9200", "10.100.1.202:9200", "10.100.1.203:9200"]
                        index => ["%{[fields][project]}-%{[fields][app_name]}-%{+YYYY.MM.dd}"] 
                        user => "elastic"
                        password => "XXXXXXXXXX"
                      }
}

############################################################################################################

启动logstash

nohup ./bin/logstash -f config/logstash_es.yml &

#############################################################################################################

下载filebeat
wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.5.4-linux-x86_64.tar.gz

修改配置文件
filebeat.inputs:
- type: log 
  paths:
    - /usr/local/nginx/logs/*.log
  fields:
    project: nginx
    app_name: nginx
    env: test
    node: 192.168.1.21
    multiline.pattern: '^[[:space:]]+(at|\.{3})\b|^Caused by:'
    multiline.negate: false
    multiline.match: after
  scan_frequency: 10s
- type: log
  paths:
    - "/var/log/messages"
  fields:
    project: system
    app_name: system
    env: test
    node: 192.168.1.21
  scan_frequency: 10s



filebeat.config.modules:
  # Glob pattern for configuration loading
    path: ${path.config}/modules.d/*.yml


output.logstash:
   hosts: ["10.100.1.201:5044", "10.100.1.203:5044"]
   loadbalance: true
   index: nginx
############################################################################################################
启动filebeat
nohup ./filebeat -c filebeat.yml >/dev/null 2>&1 &

如果启动失败，看看模块  把modules.d目录下所有文件名后面加上.disabled，filebeat就可以启动了

#########################下面是破解X-pack####################################################################

由于在elasticsearch在6.3版本之后x-pack是默认安装好的，所以不再需要用户自己去安装，在此之前你可以先体验试用版30天（不影响后面破解)

kibana里面 点击Management，点击 Elasticsearch，点击 License Management，再开启试用

备份jar包，在覆盖/elasticsearch/modules/x-pack/x-pack-core/x-pack-core-6.5.4.jar

修改elasticsearch.yml配置文件
#添加如下代码打开x-pack安全验证
xpack.security.enabled: true

生成用户名和密码
自动生成密码  
./elasticsearch-setup-passwords auto

将生成的elastic密码配置到kibana中

elasticsearch.username: elastic
elasticsearch.password: XXXXXXXXXXX

启动kibana(先启动elasticsearch)

上传license.json

可以去申请个license  

{"license":{"uid":"ea808341-3d7e-4579-85a3-d12656c1f0a7","type":"platinum","issue_date_in_millis":1551830400000,"expiry_date_in_millis":2855980923000,"max_nodes":100,"issued_to":"aaa (non-production environments)","issuer":"API","signature":"AAAAAwAAAA0d0foz8ket6LdEx3GvAAABmC9ZN0hjZDBGYnVyRXpCOW5Bb3FjZDAxOWpSbTVoMVZwUzRxVk1PSmkxaktJRVl5MUYvUWh3bHZVUTllbXNPbzBUemtnbWpBbmlWRmRZb25KNFlBR2x0TXc2K2p1Y1VtMG1UQU9TRGZVSGRwaEJGUjE3bXd3LzRqZ05iLzRteWFNekdxRGpIYlFwYkJiNUs0U1hTVlJKNVlXekMrSlVUdFIvV0FNeWdOYnlESDc3MWhlY3hSQmdKSjJ2ZTcvYlBFOHhPQlV3ZHdDQ0tHcG5uOElCaDJ4K1hob29xSG85N0kvTWV3THhlQk9NL01VMFRjNDZpZEVXeUtUMXIyMlIveFpJUkk2WUdveEZaME9XWitGUi9WNTZVQW1FMG1DenhZU0ZmeXlZakVEMjZFT2NvOWxpZGlqVmlHNC8rWVVUYzMwRGVySHpIdURzKzFiRDl4TmM1TUp2VTBOUlJZUlAyV0ZVL2kvVk10L0NsbXNFYVZwT3NSU082dFNNa2prQ0ZsclZ4NTltbU1CVE5lR09Bck93V2J1Y3c9PQAAAQAgSBeZqIpgIgPtx3QyVzFbhoLK68XkY3XiaH15Gq1FFm5IBHxISlmOHH9sAGf3R9o4dqQbByKuFr7wlPmnG6yR9Z3tDWfDA90r0Tyvha2GZi7cV4P/ExaV1jPwuUVR5nMP7nhExEQXvkRL+7eyeqOwpyV0eRdcqsJgQ2Aq4fgIGK73pABwFwfJFTI2OMTevqYlY1ZREZ4LgrNGMSItOujuHleHGp6jSGUdJoE1wnc0xkZWwMpKArURqlPoENZa4MjvFoK4uu+3/0/rEg4Jmgi7ZgEPWpc1QnSYiZzJ0W1FWaxi+m/HwUsnG+1tv9QPfXcWTbf76bOZe7+zT9HauKC+","start_date_in_millis":1551830400000}}

然后把license.json上传到服务器并使用curl提交

curl -XPUT -u elastic 'http://127.0.0.1:9200/_xpack/license' -H "Content-Type: application/json" -d @license.json

把x-pack关了再上传

xpack.security.enabled: false

再次启动elasticsearch并提交license.json我们会得到如下响应{"acknowledged":true,"license_st.......................}

把x-pack再打开

xpack.security.enabled: true

还要配置SSL

./elasticsearch-certgen
然后会出现如下信息标红的代表你要填写的

******************************************************************************
Note: The 'elasticsearch-certgen' tool has been deprecated in favour of the
      'elasticsearch-certutil' tool. This command will be removed in a future
      release.
******************************************************************************

This tool assists you in the generation of X.509 certificates and certificate
signing requests for use with SSL in the Elastic stack. Depending on the command
line option specified, you may be prompted for the following:

* The path to the output file
    * The output file is a zip file containing the signed certificates and
      private keys for each instance. If a Certificate Authority was generated,
      the certificate and private key will also be included in the output file.
* Information about each instance
    * An instance is any piece of the Elastic Stack that requires a SSL certificate.
      Depending on your configuration, Elasticsearch, Logstash, Kibana, and Beats
      may all require a certificate and private key.
    * The minimum required value for each instance is a name. This can simply be the
      hostname, which will be used as the Common Name of the certificate. A full
      distinguished name may also be used.
    * A filename value may be required for each instance. This is necessary when the
      name would result in an invalid file or directory name. The name provided here
      is used as the directory name (within the zip) and the prefix for the key and
      certificate files. The filename is required if you are prompted and the name
      is not displayed in the prompt.
    * IP addresses and DNS names are optional. Multiple values can be specified as a
      comma separated string. If no IP addresses or DNS names are provided, you may
      disable hostname verification in your SSL configuration.
* Certificate Authority private key password
    * The password may be left empty if desired.

Let's get started...

Please enter the desired output file [certificate-bundle.zip]: cert.zip  （压缩包名称）
Enter instance name: elk-cluster(实例名)
Enter name for directories and files [p4mES]: elasticsearch（文件夹名）
Enter IP Addresses for instance (comma-separated if more than one) []: 127.0.0.1(实例ip，多个ip用逗号隔开)
Enter DNS names for instance (comma-separated if more than one) []: node-1（节点名，多个节点用逗号隔开）
Would you like to specify another instance? Press 'y' to continue entering instance information: 
Certificates written to /usr/local/elasticsearch/bin/cert.zip（这个是生成的文件存放地址，不用填写）

This file should be properly secured as it contains the private keys for all
instances and the certificate authority.

After unzipping the file, there will be a directory for each instance containing
the certificate and private key. Copy the certificate, key, and CA certificate
to the configuration directory of the Elastic product that they will be used for
and follow the SSL configuration instructions in the product guide.

For client applications, you may only need to copy the CA certificate and
configure the client to trust this certificate.
#################################################################################################################

接下来就是把.zip压缩包解压然后把ca文件夹和elasticsearch文件夹的东西都放到/opt/elasticsearch-6.5.4/config目录下
再修改elasticsearch.yml配置文件
#添加如下变量
xpack.security.transport.ssl.enabled: true
xpack.ssl.key: elasticsearch.key
xpack.ssl.certificate: elasticsearch.crt
xpack.ssl.certificate_authorities: ca.crt
##################################################################################################################


再重新启动elasticsearch

######################################################################################################################


后续添加用户权限设定规则可以参考
https://blog.csdn.net/wu2700222/article/details/85107414

文章参考  
https://blog.csdn.net/shi_yi_fei/article/details/85266953

https://www.plaza4me.com/article/20180825223849878
